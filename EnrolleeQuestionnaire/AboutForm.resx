<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk12AgAAAAAAAHYAAAAoAAAAIAAAACAAAAABAAQAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////wAA
        AAAAAAAAAAAAAAAAAAAO6Hh4eO7u7uA/MIeO7u7gDuh4eHju7u7gPzCHju7u4A7oeHh47u7u4D8wh47u
        7uAO6Hh4eO7u7uA/MIeO7u7gCId4eHd4iIiAPzCIeH7u4AeIeHh4h4iHgD8wiIh+7uAHiIh4iIeIh4A/
        MIiIfu7gCHeIiId4iIhwPzCIh+7u4AiId3d4iIiIA3iDCIiIjuAHd3d3d3d3cDeHiDCHd37gCIiIiIiI
        iAN4f/iDCIiIgAiIiIiIiIA3h3d3iDCIiIAHd3d3d4gDeHPz8/h4CIjgCIiIiIiAN4f/////iDDu4AiH
        d3d4gAABEREREREA7uAIiIiIiIiImbmZuZmZ7u7gCIiIiIiIiJm5uZu5ue7u4AiIiIiIiImbubuZu5nu
        7uAHiIiIiIiJm5mbmZmZ7u7gCHeIiId4iZubm7m7me7u4AiId4d4iI6bm5u5mZ7u7uAIiIh4iIjum5m5
        u5vu7u7gDuiIiIju7umZuZme7u7u4A7u6Iju7u7umbuZnu7u7uAO7u6O7u7u7umZue7u7u7gDu7uju7u
        7u7u6Znu7u7u4A7u7o7u7u7u7u6Z7u7u7uAO7u6O7u7u7u7unu7u7u7gDu7uju7u7u7u7u7u7u7u4A7u
        7u7u7u7u7u7u7u7u7uAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Создается информационная система АБИТУРИЕНТ для автоматизации работы приемной комиссии вуза. Один из 
фрагментов этой предметной области требует обработки анкетных данных абитуриентов.
Анкета включает следующие данные об абитуриенте:
- регистрационный номер; 
- фамилия, имя и отчество; 
- дата рождения; 
- оконченное среднее учебное заведение (название, номер, город); 
- дата окончания;
- наличие красного диплома или золотой/серебряной медали;
 - адрес (город, улица, номер дома, телефон);
-  выбранная специальность.

Исходными документами для заполнения анкеты являются аттестат или диплом о среднем образовании, 
заявление абитуриента. В вузе определен список специальностей, который может изменяться ежегодно.
По каждой специальности вуза определен список сдаваемых предметов, например информационные системы:
- математика (п),
- математика (у), 
- русский язык (п) и т.д. 

ИС должна обеспечивать выполнение следующих функций: 
- ввод и коррекцию анкетных данных; 
- просмотр анкетных данных по специальностям в алфавитном порядке; 
- ввод, коррекцию и просмотр специальностей и сдаваемых предметов; 
- вывод на печать анкетных данных абитуриентов, имеющих красный диплом или медаль;
- вывод на печать всех инициалов абитуриентов по специальностям в алфавитном порядке 
с указанием сдаваемых предметов; 
- вывод на печать анкетных данных по специальностям.</value>
  </data>
</root>